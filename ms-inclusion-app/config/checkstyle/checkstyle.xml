<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="localeCountry" value="US"/>
    <property name="localeLanguage" value="en"/>

    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
        <property name="fileExtensions" value="java,xml"/>
    </module>
    <module name="SuppressWarningsFilter"/>

    <!-- TreeWalker Checks -->
    <module name="TreeWalker">
        <!-- Annotations -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact"/>
        </module>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>

        <!-- Block Checks -->
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="LeftCurly"/>
        <module name="RightCurly"/>
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO, LITERAL_FOR, LITERAL_WHILE"/>
        </module>
        <module name="AvoidNestedBlocks"/>

        <!-- Class Design -->
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="MutableException"/>
        <module name="InnerTypeLast"/>
        <module name="OneTopLevelClass"/>

        <!-- Coding -->
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="RequireThis">
            <property name="checkMethods" value="false"/>
            <property name="validateOnlyOverlapping" value="false"/>
        </module>
        <module name="OneStatementPerLine"/>

        <!-- Imports -->
        <module name="AvoidStaticImport">
            <property name="excludes"
                      value="org.assertj.core.api.Assertions.*,
                      org.assertj.core.api.SoftAssertions.*,
                      org.hamcrest.Matchers.*,
                      org.mockito.Matchers.*,
                      org.mockito.Mockito.*,
                      org.mockito.BDDMockito.*,
                      org.mockito.AdditionalMatchers.*,
                      org.mockito.ArgumentMatchers.*,
                      com.tngtech.archunit.core.importer.ImportOption.*,
                      com.tngtech.archunit.lang.syntax.ArchRuleDefinition.*,
                      org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*,
                      org.springframework.test.web.servlet.result.MockMvcResultHandlers.*,
                      org.springframework.test.web.servlet.result.MockMvcResultMatchers.*,
                      org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.*,
                      org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.*,
                      org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.*,
                      org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo,
                      org.springframework.restdocs.mockmvc.MockMvcRestDocumentation.*,
                      org.springframework.restdocs.operation.preprocess.Preprocessors.*,
                      org.springframework.restdocs.payload.PayloadDocumentation.*,
                      org.springframework.restdocs.http.HttpDocumentation.*,
                      org.springframework.restdocs.headers.HeaderDocumentation.*,
                      org.springframework.restdocs.request.RequestDocumentation.*,
                      org.springframework.restdocs.mockmvc.RestDocumentationRequestBuilders.*,
                      org.springframework.context.annotation.ComponentScan.Filter,
                      org.springframework.test.web.client.ExpectedCount.*,
                      org.springframework.test.web.client.match.MockRestRequestMatchers.*,
                      org.springframework.test.web.client.response.MockRestResponseCreators.*"/>
        </module>
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>

        <!-- Javadoc Comments -->
        <module name="JavadocStyle">
            <property name="checkEmptyJavadoc" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <module name="JavadocTagContinuationIndentation">
            <property name="offset" value="0"/>
        </module>
        <module name="AtclauseOrder">
            <property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF"/>
            <property name="tagOrder" value="@param, @author, @since, @see, @version, @serial, @deprecated"/>
        </module>
        <module name="AtclauseOrder">
            <property name="target" value="METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
            <property name="tagOrder" value="@param, @return, @throws, @since, @deprecated, @see"/>
        </module>

        <!-- Miscellaneous -->
        <module name="CommentsIndentation"/>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="OuterTypeFilename"/>

        <!-- Modifiers -->
        <module name="RedundantModifier"/>

        <!-- Package -->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>

        <!-- Regexp -->
        <module name="RegexpSinglelineJava">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.mockito\.Mockito\.(when|doThrow|doAnswer)"/>
            <property name="message"
                      value="Please use BDDMockito imports."/>
            <property name="ignoreComments" value="true"/>
        </module>
        <module name="Regexp">
            <property name="format" value="[ \t]+$"/>
            <property name="illegalPattern" value="true"/>
            <property name="message" value="Trailing whitespace"/>
        </module>
        <module name="ConstantName"/>
        <!-- Whitespace -->
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS, ARRAY_DECLARATOR"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="SuppressWarningsHolder"/>

    </module>
</module>
